#!/bin/bash
#-----------------------------
# img-optimize (2020) fszostak
# Wed Aug 22 15:38:33 -03 2018

function ctrl_c() {
	echo "Aborted!!!"
	[ -f $TAR ] && rm $TAR
	exit
}

function filesize() {
	if [ "$(uname)" == "Linux" ]; then
		return $(stat --printf="%s" "$1")
	else
		return $(stat -f%z "$1")
	fi
}

# setup: brew install jpegoptim pngquant 

O_JPG=jpegoptim
O_PNG=pngquant

which $O_JPG > /dev/null
if [ $? -ne 0 ]; then 
  echo "Please install $O_JPG"
  echo "On MacOS: brew install $O_JPG" 
  exit
fi

which $O_PNG > /dev/null
if [ $? -ne 0 ]; then 
  echo "Please install $O_PNG"
  echo "On MacOS: brew install $O_PNG" 
  
fi

if [ "$1" = "-h" -o $# -eq 0 ]; then
	echo "usage: img-optimize -m <tine-in-seconds> <dir>"
	echo "       optimize jpg and png images from directory,"
	echo "       all images will be overwritted"
	exit
fi

if [ "$1" = "-m" ]; then
	MMIN=$2
	IMAGES="$3"
else
	MMIN=0
	IMAGES="$1"

	NEWER=./.img-optimize.$IMAGES
	if [ ! -f $NEWER ]; then
		touch -t 200001010000 $NEWER
	fi
fi

echo "Scanning \"$IMAGES\" ..."
trap ctrl_c INT

TMP=/tmp/img-optimize-$$.tmp

# --- optimizing JPEG image files

if [ $MMIN -eq 0 ]; then
	find "$IMAGES" -newer $NEWER -name "*.jp*g" -type f 2> /dev/null > $TMP
else
	find "$IMAGES" -mmin $MMIN -name "*.jp*g" -type f 2> /dev/null > $TMP
fi

echo "Optimizing $(cat $TMP | wc -l) JPEG files..."

while read FILE; do
	OPT_FILE="${FILE}.opt"

	[ ! -f "$FILE" ] && continue

	$O_JPG --all-progressive --stdout -m80 "$FILE" > "$OPT_FILE"

	if [ $? -ne 0 ]; then
		[ -f "$OPT_FILE" ] && rm "$OPT_FILE"
		echo "error: jpegoptim failed for $FILE"
	else
		filesize "$OPT_FILE"
		if [ $? -gt 0 ]; then
			mv "$OPT_FILE" "$FILE"
		else
			rm "$OPT_FILE"
		fi
	fi

	echo
done < $TMP


# --- optimizing PNG image files

if [ $MMIN -eq 0 ]; then
	find "$IMAGES" -newer $NEWER -name "*.png" -type f 2> /dev/null > $TMP
else
	find "$IMAGES" -mmin $MMIN -name "*.png" -type f 2> /dev/null > $TMP
fi

echo "Optimizing $(cat $TMP | wc -l) PNG files..."

while read FILE; do
	OPT_FILE="${FILE}.opt"
	[ ! -f "$FILE" ] && continue

	filesize "$FILE"
	ORIG_FSIZE=$?

	$O_PNG --quality=75-90 - < "$FILE" > "$OPT_FILE"

	if [ $? -ne 0 ]; then
		[ -f "$OPT_FILE" ] && rm "$OPT_FILE"
		echo "error: pngquant failed for $FILE"
	else
		filesize "$OPT_FILE"
		FSIZE=$?

		if [ $FSIZE -gt 0 ]; then
			mv "$OPT_FILE" "$FILE"
			echo "$FILE ($ORIG_FSIZE -> $FSIZE)"
		else
			rm "$OPT_FILE"
		fi
	fi

	echo
done < $TMP

if [ $MMIN -eq 0 ]; then
	touch $NEWER
fi
