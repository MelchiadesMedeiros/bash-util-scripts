#!/usr/bin/env bash
#-----------------------------
# docker-rmi (2020) fszostak
# Sun Apr 26 08:21:08 -03 2020

. ~/scripts/.app-functions.sh

TMP=/tmp/$(basename $0).tmp

if [ "$1" == "-h" -o $# -gt 1 ]; then
  echo "usage: docker-rmi [all|<filter>]"
  echo "       options:"
  echo "       all       remove all images"
  echo "       <filter>  word for filter \"docker images\" result"
  exit
fi

if [ -f docker-compose.yml ]; then
    docker-compose down
fi

echo
echo "Removing docker dangling images..."
bash -c 'docker rmi -f $(docker images -f "dangling=true" -q)' > /dev/null 2>&1

while true
do
  if [ $# -eq 1 -a "$1" != "all" ]; then
    docker images | grep -e "$1\|REPOSITORY" | cut -c1-75 | sort > $TMP
  else
    docker images | cut -c1-75 | grep -v "REPOSITORY" | sort > $TMP
  fi

  NUM_LINES=$(cat $TMP | wc -l)

  if [ $NUM_LINES -eq 0 ]; then
    echo "No images found"
    exit
  fi

  if [ "$1" == "all" ]; then
    IMAGE_ID=""
    while read LINE; do
      IMAGE_ID="$IMAGE_ID $(echo $LINE | awk '{print $3}')"
    done <<EOF
$(grep -v "REPOSITORY" $TMP)
EOF
  else
    clear
    msg_bold "   docker-rmi (2020) by fszostak"
    echo
    echo "   select one image to remove using up/down keys"
    echo "   and confirm option with enter or return key"

    IFS=$'\n' 
    options=("--- <exit> ---" $(cat $TMP))
    echo

    #echo "   ${options[0]}"
    #unset -v 'options[0]'
    select_option "${options[@]}"
    let choice=$?

    if [ $choice -eq 0 ]; then
        echo
        break
    fi
    IMAGE_ID=$(echo ${options[$choice]} | awk '{print $3}')
  fi

  echo "Removing docker selected images..."
  bash -c "docker rmi $IMAGE_ID -f"
  rm $TMP
  echo

  press_continue
done
